PROGRAM
IDENT mytest
SEMICOLON
IDENT n
COLON
INTEGER
SEMICOLON
IDENT i
COMMA
IDENT j
COMMA
IDENT k
COLON
INTEGER
SEMICOLON
IDENT x
COMMA
IDENT y
COMMA
IDENT z
COLON
INTEGER
SEMICOLON
IDENT t
COLON
ARRAY
L_BRACKET
NUMBER 100
R_BRACKET
OF
INTEGER
SEMICOLON
BEGIN_PROGRAM
READ
IDENT n
COMMA
IDENT i
COMMA
IDENT j
COMMA
IDENT x
COMMA
IDENT y
SEMICOLON
IDENT z
ASSIGN
NUMBER 0
SEMICOLON
IF
IDENT n
GTE
NUMBER 100
THEN
WRITE
IDENT n
SEMICOLON
EXIT
SEMICOLON
ENDIF
SEMICOLON
IF
IDENT i
LT
IDENT j
AND
IDENT j
LTE
IDENT n
AND
IDENT i
GTE
NUMBER 0
THEN
IDENT t
L_BRACKET
IDENT i
R_BRACKET
ASSIGN
IDENT i
SEMICOLON
IDENT t
L_BRACKET
IDENT j
R_BRACKET
ASSIGN
IDENT j
SEMICOLON
IDENT k
ASSIGN
IDENT t
L_BRACKET
IDENT i
R_BRACKET
SEMICOLON
IDENT t
L_BRACKET
IDENT i
R_BRACKET
ASSIGN
IDENT t
L_BRACKET
IDENT j
R_BRACKET
SEMICOLON
IDENT t
L_BRACKET
IDENT j
R_BRACKET
ASSIGN
IDENT k
SEMICOLON
ELSE
WHILE
IDENT x
GT
IDENT y
OR
FALSE
BEGINLOOP
IDENT k
ASSIGN
L_PAREN
NUMBER 1
ADD
IDENT y
SUB
IDENT x
R_PAREN
MULT
IDENT n
MOD
NUMBER 3
ADD
IDENT x
SEMICOLON
IDENT x
ASSIGN
IDENT x
SUB
NUMBER 10
SEMICOLON
IF
IDENT x
GT
IDENT y
MULT
NUMBER 3
THEN
CONTINUE
SEMICOLON
ENDIF
SEMICOLON
WRITE
IDENT k
SEMICOLON
ENDLOOP
SEMICOLON
ENDIF
SEMICOLON
WRITE
IDENT x
COMMA
IDENT y
COMMA
IDENT z
SEMICOLON
IDENT z
ASSIGN
IDENT x
ADD
NUMBER 1
GTE
IDENT y
MULT
NUMBER 2
QUESTION
IDENT x
ADD
NUMBER 1
COLON
IDENT y
MULT
NUMBER 2
SEMICOLON
WRITE
IDENT x
COMMA
IDENT y
COMMA
IDENT z
COMMA
IDENT i
COMMA
IDENT j
COMMA
IDENT t
L_BRACKET
IDENT i
R_BRACKET
COMMA
IDENT t
L_BRACKET
IDENT j
R_BRACKET
SEMICOLON
END_PROGRAM
